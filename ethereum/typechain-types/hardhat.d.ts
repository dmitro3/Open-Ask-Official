/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BountiesMetaTxRelayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BountiesMetaTxRelayer__factory>;
    getContractFactory(
      name: "ERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Token__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC721Basic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Basic__factory>;
    getContractFactory(
      name: "ERC721BasicToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BasicToken__factory>;
    getContractFactory(
      name: "ERC721BasicTokenMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BasicTokenMock__factory>;
    getContractFactory(
      name: "ERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Receiver__factory>;
    getContractFactory(
      name: "SupportsInterfaceWithLookup",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SupportsInterfaceWithLookup__factory>;
    getContractFactory(
      name: "HumanStandardToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HumanStandardToken__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token__factory>;
    getContractFactory(
      name: "Lock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lock__factory>;
    getContractFactory(
      name: "StandardBounties",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StandardBounties__factory>;

    getContractAt(
      name: "BountiesMetaTxRelayer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BountiesMetaTxRelayer>;
    getContractAt(
      name: "ERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Token>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC721Basic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Basic>;
    getContractAt(
      name: "ERC721BasicToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BasicToken>;
    getContractAt(
      name: "ERC721BasicTokenMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BasicTokenMock>;
    getContractAt(
      name: "ERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Receiver>;
    getContractAt(
      name: "SupportsInterfaceWithLookup",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SupportsInterfaceWithLookup>;
    getContractAt(
      name: "HumanStandardToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HumanStandardToken>;
    getContractAt(
      name: "Migrations",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Migrations>;
    getContractAt(
      name: "Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token>;
    getContractAt(
      name: "Lock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lock>;
    getContractAt(
      name: "StandardBounties",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StandardBounties>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
